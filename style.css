* {
    box-sizing: border-box;

}

/* body {
    background-color: rgb(237, 232, 190);
} */

.line {
    text-align: center;
}

h1,
h2,
h3 {
    /* color: red; */
    /* цвет текста */
    /* font-size: 32px; */
    /* размер текста */
    text-align: center;
    /* расположение текста относительно страницы */
    font-weight: bold;
    /* жирность текста */
    /* font-style: italic; */
    /* стиль текста */
    /*  text-decoration: underline; */
    /* текст подчеркнутый */
    /* text-decoration: line-through; */
    /* текст зачеркнутый */
}

.chapter {
    color: blue;
}

.pink {
    color: pink;
}

#begin {
    color: rgb(252, 113, 7);
    font-weight: bold;
}

.text {
    font-weight: 900;
    text-transform: uppercase;
    /* делает весь текст большими буквами */
}

/* для блочных элементов применяются все свойства */
.box {
    /* box-sizing: border-box; */
    /* чтобы не прописывать для каждого отдельного блока эту команду ее выносят наверх и применяют ко всему проекту(строка 1-3) */
    /* box-sizing: content-box(по умолчанию стоит) тогда размер нашего блока будет больше чем 300*300(т.к. к нему прибавится размеры падингтона и бордера) а если мы используем border-box тогда размер самого блока будет 300*300(т.е. в 300 будет входить паддинг бордер и сам контент) но тогда ширина и высота контента(текста или картинки и т.д.) уменьшится  */
    display: inline-block;
    vertical-align: middle;
    /* это свойство работает только для элементов сосвойством display: inline-block( c blok или inlineне будет работать*/
    width: 300px;
    height: 300px;
    background-color: green;
    padding: 20px;
    /* border-width: 3px;
    border-style: solid;
    border-color: black; */
    border: 3px solid black;
    /* заменяем три строчки выше на эту одну */
    margin: 20px;
}

/* для строчных */
/* картинки  то же являются строчными */
a {

    /*     display: block;
    margin: 0 auto; */
    padding: 20px;
    /* ok */
    margin: 20px;
    /* только по ширине работает */

    /*  не будет применено т.к. к строчным элементам не применяется, строка занимает то место на которое она записана */
}

/* а строчно блочные элементы имеют свойства как блоков(марджин ширину и т.д.) а так же строчных(могут распологаться друг за другом(в отличии от блочных которые занимают все пространство)) */

.red {
    display: inline-block;

    background-color: red;

    height: 250px;
}

img {

    display: block;
    margin: 0 auto;
    width: 500px;
    margin-top: 40px;
    /* float: left; */
}

nav {
    /* position: static; стоит по умолчанию, будет так выглдяет как и задумано браузером */
    /* position: relative; меняем расположение относительно начального положения этого элемента  */
    /* мы можем менять наш элемент для этого испоьзуем left(сдвигает слева направо) right(справа налево) tob(сдвигает вниз) buttom(сдвигает вверх */
    /* left: 250px; */
    /* top: 40px; */
    /* position: absolute; меняем расположение относительно самой страницы(т.е. если right:0 то будет прижат к правому краю а нсли top:50px , то будет спущен на 50 пикселей вниз относительно вверхнего края страницы) */
    /* position: fixed; приклеивается к месту которое мы задаем(left, right, top, buttom) и при прокрутки страницы вверх вниз оно не меняет своего расположения относительно экрана */
    /* position: inherit; принимает свойство родителя(если у того релатив то и у него будет релатив)
     */
}